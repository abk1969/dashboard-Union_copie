const fetch = require('node-fetch');
const fs = require('fs');
const path = require('path');

console.log('üíæ Script de sauvegarde des donn√©es Supabase...\n');

// Configuration Supabase
const SUPABASE_CONFIG = {
  url: 'https://ybzajzcwxcgoxtqsimol.supabase.co',
  anonKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InliemFqemN3eGNnb3h0cXNpbW9sIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NjI4ODA4NywiZXhwIjoyMDcxODY0MDg3fQ.t6KhbnUmh5Ix3CWlYM5HxjR58GNxtug-h_GMzE9VIio',
};

// Headers pour les requ√™tes
const getHeaders = () => ({
  'apikey': SUPABASE_CONFIG.anonKey,
  'Authorization': `Bearer ${SUPABASE_CONFIG.anonKey}`,
  'Content-Type': 'application/json',
});

async function backupSupabaseData() {
  try {
    console.log('üîç R√©cup√©ration des donn√©es existantes...');
    
    // R√©cup√©rer toutes les donn√©es des adh√©rents
    const response = await fetch(
      `${SUPABASE_CONFIG.url}/rest/v1/adherents?select=*`,
      {
        method: 'GET',
        headers: getHeaders()
      }
    );
    
    if (!response.ok) {
      throw new Error(`Erreur HTTP: ${response.status} - ${response.statusText}`);
    }
    
    const data = await response.json();
    console.log(`‚úÖ ${data.length} enregistrements r√©cup√©r√©s`);
    
    if (data.length === 0) {
      console.log('‚ÑπÔ∏è Aucune donn√©e existante √† sauvegarder');
      return;
    }
    
    // Cr√©er le dossier backups s'il n'existe pas
    const backupDir = path.join(__dirname, '../backups');
    if (!fs.existsSync(backupDir)) {
      fs.mkdirSync(backupDir, { recursive: true });
    }
    
    // G√©n√©rer le nom de fichier avec timestamp
    const timestamp = new Date().toISOString().replace(/[:.]/g, '-').split('T')[0];
    const backupFile = path.join(backupDir, `supabase_backup_${timestamp}.json`);
    
    // Sauvegarder les donn√©es
    fs.writeFileSync(backupFile, JSON.stringify(data, null, 2));
    
    console.log(`üíæ Sauvegarde cr√©√©e: ${backupFile}`);
    console.log(`üìä ${data.length} enregistrements sauvegard√©s`);
    
    // Afficher un √©chantillon des donn√©es sauvegard√©es
    console.log('\nüìã √âchantillon des donn√©es sauvegard√©es:');
    console.log(JSON.stringify(data.slice(0, 2), null, 2));
    
    console.log('\n‚úÖ Sauvegarde termin√©e avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la sauvegarde:', error);
  }
}

// Ex√©cuter la sauvegarde
backupSupabaseData();

